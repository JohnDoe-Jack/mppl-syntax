{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MPPL",
	"fileTypes": ["mpl"],
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#string"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#entity"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.mppl",
					"match": "\\b(program|if|while|return|then|else|begin|end)\\b"
				}
			]
		},
		"storage": {
			"patterns": [
				{
					"name": "storage.type.built-in.primitive.mppl",
					"match": "\\b(integer|boolean|char|var)"
				},
				{
					"name": "storage.type.function.mppl",
					"match": "\\b(procedure|call)\\b"
				}
			]
		},
		"string": {
			"name": "string.quoted.single.mppl",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.mppl",
					"match": "\\\\."
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.mppl",
					"match": "\\/*.*\\*\\/"
				},
				{
					"name": "comment.line.mppl",
					"match": "\\{.*\\}"
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.mppl",
			"match": "\\b\\d+\\b"
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.mppl",
					"match": "\\+|-|\\*| div |=|:=|<|>|<=|>=| and | or |\\|\\|"
				}
			]
		},
		"variables": {
			"name": "variable.other.readwrite.mppl",
			"match": "\\b(?!(integer|boolean|char|program|if|while|return|then|else|writeln|write|readln|read|call|begin|end|procedure|true|false|procedure\\s+|call\\s+)\\b)[a-zA-Z_][a-zA-Z0-9_]*\\b"
		},
		"constant": {
			"name": "constant.language.mppl",
			"match": "\\b(true|false)\\b"
		},
		"entity": {
			"patterns": [
				{
					"name": "entity.name.function.mppl",
					"match": "\\b(write|writeln|read|readln)\\b"
				},
				{
					"begin": "\\b(procedure)\\s+",
					"beginCaptures": {
						"1": {
							"name": "storage.type.function.mppl"
						}
					},
					"end": "(?=\\()|(?=;)|(?=\\s*\\bvar\\b)|(?=\\s*\\bbegin\\b)",
					"patterns": [
						{
							"name": "entity.name.function.mppl",
							"match": "[a-zA-Z_][a-zA-Z0-9_]*"
						}
					]
				},
				{
					"begin": "\\b(call)\\s+",
					"beginCaptures": {
						"1": {
							"name": "storage.type.function.mppl"
						}
					},
					"end": "(?=\\()|(?=;)",
					"patterns": [
						{
							"name": "entity.name.function.mppl",
							"match": "[a-zA-Z_][a-zA-Z0-9_]*"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.mpl"
}
